[
  {
    "Id": "array-basics",
    "Name": "Array Basics",
    "Description": "Learn how to work with arrays in Python.",
    "Level": "easy",
    "Expired": "03/15/2024",
    "Score": 95,
    "Language": "Python",
    "url": "/exercise.html?Id=array-basics",
    "status": "Completed",
    "completion_date": "03/10/2024",
    "testCases": [
      {
        "input": "5",
        "expectedOutput": "10"
      },
      {
        "input": "7",
        "expectedOutput": "14"
      }
    ]
  },
  {
    "Id": "basic-math-operations",
    "Name": "Basic Math Operations",
    "Description": "Implement basic math operations like addition, subtraction, multiplication, and division in Java.",
    "Level": "easy",
    "Expired": "04/01/2024",
    "Score": 88,
    "Language": "Java",
    "url": "/exercise.html?Id=basic-math-operations",
    "status": "In Progress",
    "completion_date": "",
    "testCases": [
      {
        "input": "4",
        "expectedOutput": "16"
      }
    ]
  },
  {
    "Id": "conditional-statements",
    "Name": "Conditional Statements",
    "Description": "Write a program using if-else conditions to determine if a number is even or odd in Python.",
    "Level": "medium",
    "Expired": "05/10/2024",
    "Score": 77,
    "Language": "Python",
    "url": "/exercise.html?Id=conditional-statements",
    "status": "Not Started",
    "completion_date": "",
    "testCases": [
      {
        "input": "2",
        "expectedOutput": "Even"
      },
      {
        "input": "3",
        "expectedOutput": "Odd"
      }
    ]
  },
  {
    "Id": "loops-in-java",
    "Name": "Loops in Java",
    "Description": "Create a loop in Java that prints numbers from 1 to 100.",
    "Level": "medium",
    "Expired": "06/01/2024",
    "Score": 82,
    "Language": "Java",
    "url": "/exercise.html?Id=loops-in-java",
    "status": "Completed",
    "completion_date": "05/30/2024",
    "testCases": [
      {
        "input": "100",
        "expectedOutput": "1 2 3 ... 100"
      }
    ]
  },
  {
    "Id": "object-oriented-programming",
    "Name": "Object-Oriented Programming",
    "Description": "Implement classes and objects in C++ for a basic banking system.",
    "Level": "hard",
    "Expired": "07/20/2024",
    "Score": 65,
    "Language": "C++",
    "url": "/exercise.html?Id=object-oriented-programming",
    "status": "Completed",
    "completion_date": "07/15/2024",
    "testCases": [
      {
        "input": "1000",
        "expectedOutput": "Account balance: 1000"
      }
    ]
  },
  {
    "Id": "sorting-algorithms",
    "Name": "Sorting Algorithms",
    "Description": "Implement bubble sort and quick sort algorithms in JavaScript.",
    "Level": "hard",
    "Expired": "08/05/2024",
    "Score": 90,
    "Language": "JavaScript",
    "url": "/exercise.html?Id=sorting-algorithms",
    "status": "Not Started",
    "completion_date": "",
    "testCases": [
      {
        "input": "5, 3, 8, 4, 2",
        "expectedOutput": "2, 3, 4, 5, 8"
      }
    ]
  },
  {
    "Id": "file-io-operations",
    "Name": "File I/O Operations",
    "Description": "Read from and write to files in Python.",
    "Level": "medium",
    "Expired": "09/12/2024",
    "Score": 85,
    "Language": "Python",
    "url": "/exercise.html?Id=file-io-operations",
    "status": "In Progress",
    "completion_date": "",
    "testCases": [
      {
        "input": "file.txt",
        "expectedOutput": "File read successfully"
      }
    ]
  },
  {
    "Id": "binary-search",
    "Name": "Binary Search",
    "Description": "Implement binary search algorithm in C++.",
    "Level": "hard",
    "Expired": "10/01/2024",
    "Score": 78,
    "Language": "C++",
    "url": "/exercise.html?Id=binary-search",
    "status": "Not Started",
    "completion_date": "",
    "testCases": [
      {
        "input": "5, 1, 2, 3, 4",
        "expectedOutput": "3"
      }
    ]
  },
  {
    "Id": "data-structures-stack",
    "Name": "Data Structures - Stack",
    "Description": "Implement a stack data structure in Java.",
    "Level": "medium",
    "Expired": "10/25/2024",
    "Score": 92,
    "Language": "Java",
    "url": "/exercise.html?Id=data-structures-stack",
    "status": "Completed",
    "completion_date": "10/20/2024",
    "testCases": [
      {
        "input": "push(10), push(20), pop()",
        "expectedOutput": "10"
      }
    ]
  },
  {
    "Id": "graph-algorithms",
    "Name": "Graph Algorithms",
    "Description": "Implement graph traversal algorithms (DFS, BFS) in Python.",
    "Level": "hard",
    "Expired": "11/10/2024",
    "Score": 75,
    "Language": "Python",
    "url": "/exercise.html?Id=graph-algorithms",
    "status": "Not Started",
    "completion_date": "",
    "testCases": [
      {
        "input": "graph1",
        "expectedOutput": "DFS traversal: 1, 2, 3"
      }
    ]
  },
  {
    "Id": "api-development",
    "Name": "API Development",
    "Description": "Create a REST API in Node.js using Express.",
    "Level": "medium",
    "Expired": "09/30/2024",
    "Score": 89,
    "Language": "Node.js",
    "url": "/exercise.html?Id=api-development",
    "status": "In Progress",
    "completion_date": "",
    "testCases": [
      {
        "input": "GET /api/users",
        "expectedOutput": "200 OK"
      }
    ]
  },
  {
    "Id": "database-crud-operations",
    "Name": "Database CRUD Operations",
    "Description": "Create CRUD operations in SQL for a user management system.",
    "Level": "easy",
    "Expired": "10/15/2024",
    "Score": 80,
    "Language": "SQL",
    "url": "/exercise.html?Id=database-crud-operations",
    "status": "Completed",
    "completion_date": "10/12/2024",
    "testCases": [
      {
        "input": "SELECT * FROM users",
        "expectedOutput": "List of users"
      }
    ]
  },
  {
    "Id": "regular-expressions",
    "Name": "Regular Expressions",
    "Description": "Use regular expressions to validate email and phone numbers in JavaScript.",
    "Level": "medium",
    "Expired": "11/05/2024",
    "Score": 84,
    "Language": "JavaScript",
    "url": "/exercise.html?Id=regular-expressions",
    "status": "Not Started",
    "completion_date": "",
    "testCases": [
      {
        "input": "email@example.com",
        "expectedOutput": "Valid email"
      },
      {
        "input": "123-456-7890",
        "expectedOutput": "Valid phone number"
      }
    ]
  },
  {
    "Id": "dynamic-programming",
    "Name": "Dynamic Programming",
    "Description": "Solve problems using dynamic programming techniques in Python.",
    "Level": "hard",
    "Expired": "11/01/2024",
    "Score": 93,
    "Language": "Python",
    "url": "/exercise.html?Id=dynamic-programming",
    "status": "Completed",
    "completion_date": "10/29/2024",
    "testCases": [
      {
        "input": "5, 10, 15",
        "expectedOutput": "25"
      }
    ]
  }
]
